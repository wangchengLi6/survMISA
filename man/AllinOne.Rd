% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{AllinOne}
\alias{AllinOne}
\title{All in One function}
\usage{
AllinOne(
  in.X,
  in.Z,
  in.M,
  in.Y,
  para.kappa = 1,
  para.nu = 1,
  para.seed = 1,
  para.rs = c("half", "BIC", "1se"),
  para.q,
  para.parallel = F,
  para.coresnum,
  para.freq = 0.5,
  para.d,
  in.stat_prescr
)
}
\arguments{
\item{in.X}{vector, with \code{n} elements or matirx with \code{1} column, the input of one-dimensional exposures.}

\item{in.Z}{matrix, with \code{n} rows and \code{s} colnumns, the input of s-dimensional covariates.}

\item{in.M}{matrix, with \code{n} rows and \code{p} colnumns, the input of p-dimensional candidate mediators.}

\item{in.Y}{\code{Surv} object, with \code{n} elements, the input of survival information.}

\item{para.kappa}{numeric, suggested to be \code{1} or \code{2}. When \code{para.d} is not specified, it will be used to calculate \code{para.d} as \eqn{d = n/log(n) * \kappa}. Refer to \code{PreScr_step()}}

\item{para.nu}{numeric, to calculate the size of subsamples. Refer to \code{SampleSplit_step}.}

\item{para.seed}{numeric or vector, random seed for random splitting. A vector of seeds means multiple sample splitting with each seed. Refer to \code{SampleSplit_step()}.}

\item{para.rs}{one of \code{half}, \code{BIC} and \verb{1se}. The strategy for selecting the penalty parameter \eqn{\lambda} in the penalized Cox model. Refer to \code{T1onD1()}.}

\item{para.q}{numeric value from 0 to 1. The target FDR level.}

\item{para.parallel}{logical, default as \code{FALSE}. Determines whether to use parallel computation for acceleration.}

\item{para.coresnum}{integer, the number of cores to use when \code{para.parallel} is set to \code{TRUE}. Default as all the cores detected by \code{detectCores()}.}

\item{para.d}{integer, the number of mediators will be retained by SIS program. If \code{para.d} is not specified, we will use \code{para.kappa} and the sample size \code{n} to calculate it. Refer to \code{PreScr_step()}.}

\item{in.stat_prescr}{vector with length p, the user-specified filter indicator. Refer to \code{PreScr_step()}.}
}
\value{
A list with elements \code{deran} , \code{S3.mulsplit} , \code{all.mulsplit} :

\code{deran}  the result of derandomization operation. If the length of \code{para.seed} is 1, than it return the result from single sample splitting.

\code{S3.mulsplit} the list of \code{B} sets. Each of them includes the indices of mediators selected by the \code{b}-th sample splitting.

\code{all.mulsplit}  the list of \code{B} list. Each of them includes detailed information derived in the \code{b}-th sample splitting.
}
\description{
Complete the survMISA procedure all in one function. It includes all the steps of survMISA.
}
\examples{
\code{n = 500;p = 1000;
A = matrix(c(rep(1,20),rep(-1,20),rep(0,p-40)),nrow = 1,ncol = p)/2
eta = matrix(c(0.5,-0.5),nrow = 2,ncol = p);gam = 0.5;xi = matrix(c(0.5,0.5),2,1)
B = matrix(c(rep(1,20),rep(0,20),rep(-1,20),rep(0,940)),nrow = p,ncol = 1)/2
set.seed(1)
# Exposures and covariates
X = matrix(rnorm(n),nrow = n)
Z = matrix(rnorm(n*2),n,2)
# Candidate mediators
eM = matrix(rnorm(n*p),n,p)
M = X \%*\% A + Z \%*\% eta + eM
# Survival outcomes
expp = exp(X \%*\% gam + Z \%*\% xi + M \%*\% B)
DT = sqrt(log(1-matrix(runif(n),ncol = 1))/expp*(-1) * 2)# Death time
CT = runif(n,max = 10) # Censoring time
Y = pmin(DT,CT)
Delta = (Y==DT)*1
# check the model
require(survival)
coxph(Surv(Y,Delta)~X+Z+M[,c(1:20,41:60)])
library(survMISA)
atest = AllinOne(
  in.X = X,
  in.Z = Z,
  in.M = M,
  in.Y = Surv(Y,Delta),
  para.kappa = 1,
  para.nu = 2,
  para.seed = 1:2,
  para.rs = "half",
  para.q = 0.1,
  para.parallel = F,
  para.freq = 0.5)
atest$deran$id.S3.deran ## The real mediators is 1,2,...,20}
}
